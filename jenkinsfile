pipeline {
    agent any
    environment {
        NODE_ENV = 'development'
    }
    stages {
        stage('Checkout Code') {
            steps {
                script {
                    try {
                        sh 'git reset --hard'
                        sh 'git clean -fd'
                        sh 'git pull origin dev' // Remplace "main" par ta branche
                    } catch (err) {
                        echo "‚ùå Erreur lors du fetch du code: ${err}"
                        error("√âchec du checkout du code")
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    try {
                        sh 'npm install'
                    } catch (err) {
                        echo "‚ùå Erreur lors de npm install: ${err}"
                        error("√âchec de l'installation des d√©pendances")
                    }
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                script {
                    try {
                        sh 'npm test'
                    } catch (err) {
                        echo "‚ùå Tests √©chou√©s: ${err}"
                        error("Les tests unitaires ont √©chou√©")
                    }
                }
            }
        }

        stage('Build Application') {
            steps {
                script {
                    try {
                        sh 'npm run build-dev'
                    } catch (err) {
                        echo "‚ùå Erreur lors du build: ${err}"
                        error("√âchec de la construction de l'application")
                    }
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Build r√©ussi !"
        }
        failure {
            echo "üí• Le build a √©chou√©, v√©rifie les logs."
        }
    }
}
